From a18210673fa0f2b08b1d7a2d37c2d05cc9dd0c06 Mon Sep 17 00:00:00 2001
From: Kira Bruneau <kira.bruneau@pm.me>
Date: Wed, 24 Jul 2024 10:41:09 -0400
Subject: [PATCH] Remove SecretService in favour of SecretServiceDBus

---
 pkg/keychain/helper_linux.go | 16 ----------------
 1 file changed, 16 deletions(-)

diff --git a/pkg/keychain/helper_linux.go b/pkg/keychain/helper_linux.go
index ce531faa..f980985e 100644
--- a/pkg/keychain/helper_linux.go
+++ b/pkg/keychain/helper_linux.go
@@ -20,14 +20,12 @@ package keychain
 import (
 	"github.com/docker/docker-credential-helpers/credentials"
 	"github.com/docker/docker-credential-helpers/pass"
-	"github.com/docker/docker-credential-helpers/secretservice"
 	"github.com/sirupsen/logrus"
 	"golang.org/x/sys/execabs"
 )
 
 const (
 	Pass              = "pass-app"
-	SecretService     = "secret-service"
 	SecretServiceDBus = "secret-service-dbus"
 )
 
@@ -41,13 +39,6 @@ func listHelpers() (Helpers, string) {
 		logrus.WithField("keychain", "SecretServiceDBus").Debug("Keychain is not available.")
 	}
 
-	if _, err := execabs.LookPath("gnome-keyring"); err == nil && isUsable(newSecretServiceHelper("")) {
-		helpers[SecretService] = newSecretServiceHelper
-		logrus.WithField("keychain", "SecretService").Info("Keychain is usable.")
-	} else {
-		logrus.WithField("keychain", "SecretService").Debug("Keychain is not available.")
-	}
-
 	if _, err := execabs.LookPath("pass"); err == nil && isUsable(newPassHelper("")) {
 		helpers[Pass] = newPassHelper
 		logrus.WithField("keychain", "Pass").Info("Keychain is usable.")
@@ -58,11 +49,8 @@ func listHelpers() (Helpers, string) {
 	defaultHelper := SecretServiceDBus
 
 	// If Pass is available, use it by default.
-	// Otherwise, if SecretService is available, use it by default.
 	if _, ok := helpers[Pass]; ok {
 		defaultHelper = Pass
-	} else if _, ok := helpers[SecretService]; ok {
-		defaultHelper = SecretService
 	}
 	return helpers, defaultHelper
 }
@@ -74,7 +62,3 @@ func newDBusHelper(string) (credentials.Helper, error) {
 func newPassHelper(string) (credentials.Helper, error) {
 	return &pass.Pass{}, nil
 }
-
-func newSecretServiceHelper(string) (credentials.Helper, error) {
-	return &secretservice.Secretservice{}, nil
-}
-- 
2.44.1

